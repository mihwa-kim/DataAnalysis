# -*- coding: utf-8 -*-
"""Quantium_Data preparation and customer analytics

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10AqDymXkXaAsMpz36goRsI477zYRHlJw

**[Analysis]**
* Customers who use Mainstream is biggest.
* Order singles/couples has biggest portion compared with other life styles-20.57%
* The sales in December are higher than in other months, with no issues observed when analyzing the data by year or day.
* Customers who have a routine make up a larger portion than those who do not have a routine.
* During the period, the most popular item sold was the Dorito Corn Chip Supreme, with sales exceeding $40,352.

**[Conclusion]**

Our target customers should be those who purchase Mainstream and Order singles or couples. In addition, we could run a December promotion with a strong emphasis on the Dorito Corn Chip Supreme. Let's be aggressive in our marketing strategy during this time.
"""

import pandas as pd

purchase_df = pd.read_csv('QVI_purchase_behaviour.csv')
purchase_df

purchase_df.info()

transaction_df = pd.read_csv('QVI_transaction_data.csv')
transaction_df

transaction_df.isnull().sum()

transaction_df.info()

transaction_df['DATE'] = transaction_df['DATE'].apply(pd.to_datetime)
transaction_df

transaction_df['year'] = transaction_df['DATE'].dt.year
transaction_df['month'] = transaction_df['DATE'].dt.month
transaction_df['day'] = transaction_df['DATE'].dt.day
transaction_df['hour'] = transaction_df['DATE'].dt.hour
transaction_df

purchase_df

transaction_join = pd.merge(transaction_df, purchase_df, on='LYLTY_CARD_NBR', how='left')
transaction_join

transaction_join.describe()

transaction_join.groupby("PREMIUM_CUSTOMER")["LYLTY_CARD_NBR"].count()

transaction_join.groupby("LIFESTAGE")["LYLTY_CARD_NBR"].count()

del transaction_join['hour']

transaction_join['yearmonth'] = transaction_join['DATE'].dt.strftime("%Y%m")

transaction_join

pie_labels = transaction_join.groupby("PREMIUM_CUSTOMER")["LYLTY_CARD_NBR"].count().index.tolist()
pie_values = transaction_join.groupby("PREMIUM_CUSTOMER")["LYLTY_CARD_NBR"].count().values.tolist()
print(pie_labels)
print(pie_values)

import matplotlib.pyplot as plt
import seaborn as sns

plt.pie(pie_values,labels=pie_labels, autopct='%.02f%%')
plt.title('Percentage of Premium Customer type')
plt.show()
#Customers who use Mainstream is biggest.

pie_labels = transaction_join.groupby("LIFESTAGE")["LYLTY_CARD_NBR"].count().index.tolist()
pie_values = transaction_join.groupby("LIFESTAGE")["LYLTY_CARD_NBR"].count().values.tolist()

plt.pie(pie_values,labels=pie_labels, autopct='%.02f%%')
plt.title('Percentage of Life Stage type')
plt.show()
#Order singles/couples has biggest portion compared with other life styles-20.57%

transaction_date = pd.DataFrame(transaction_join.groupby(['year','month','day'],as_index=False)['STORE_NBR'].count())
transaction_date.rename(columns={"STORE_NBR":"count"}, inplace=True)
transaction_date

figure, (ax1,ax2,ax3) = plt.subplots(nrows=1, ncols=3)

figure.set_size_inches(16,4)

sns.barplot(data=transaction_date, x='year', y='count', ax=ax1)
sns.barplot(data=transaction_date, x='month', y='count', ax=ax2)
sns.barplot(data=transaction_date, x='day', y='count', ax=ax3)

ax1.set(ylabel='Count', title='Year')
ax2.set(ylabel='month', title='Month')
ax3.set(ylabel='day', title='Day')

# The sales in December are higher than in other months, with no issues observed when analyzing the data by year or day.

transaction_date = pd.DataFrame(transaction_join.groupby(['LYLTY_CARD_NBR'],as_index=False)['LIFESTAGE'].count())
transaction_date.rename(columns={"LIFESTAGE":"count"}, inplace=True)
transaction_date

#routine_flg = IF customer purchases more than 4 times during the period, I describe '1'.
transaction_date["routine_flg"] = 0
transaction_date["routine_flg"] = transaction_date["routine_flg"].where(transaction_date["count"]<4, 1)
transaction_date

purchase_join = pd.merge(purchase_df, transaction_date[["LYLTY_CARD_NBR","routine_flg"]], on="LYLTY_CARD_NBR", how='left')
purchase_join.groupby('routine_flg').count()
#Customers who have a routine make up a larger portion than those who do not have a routine.

transaction_join.info()

prod_count = transaction_join.groupby('PROD_NAME',as_index=False)['PROD_QTY','TOT_SALES'].sum()
prod_count.sort_values(['PROD_QTY','TOT_SALES'], ascending=False)
# During the period, the most popular item sold was the Dorito Corn Chip Supreme, with sales exceeding $40,352.

